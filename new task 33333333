from netmiko import ConnectHandler
import textfsm

def pretty_print(output):
    # Load TextFSM template for 'show run'
    template_file = "textfsm_templates/cisco_ios_show_run.template"
    with open(template_file) as f:
        template = textfsm.TextFSM(f)

    # Parse the 'show run' output using the template
    result = template.ParseText(output)

    # Print the formatted output
    for entry in result:
        print("{:<20} {:<20}".format(entry[0], entry[1]))

# Define the device parameters
device = {
    'device_type': 'cisco_ios',
    'host': '192.168.56.101',
    'username': 'cisco',
    'password': 'cisco123!',
    'secret': 'class123!'
}

# Establish an SSH connection
ssh = ConnectHandler(**device)

# Enter privileged exec mode
ssh.enable()

# Define a list of configuration commands
commands = [
    'router ospf 1',
    'network 10.0.0.0 0.255.255.255 area 0',
    'network 192.168.100.0 0.0.0.255 area 1',
    'exit',
    'interface loopback 0',
    'ip address 1.2.1.2 255.255.255.255',
    'exit'
]

# Send configuration commands
result = ssh.send_config_set(commands)
print(result)

# Send "show run" command and pretty print the output
show_run_output = ssh.send_command('show run')
print("\nShow Run Output:")
pretty_print(show_run_output)

# Exit privileged exec mode
ssh.exit_enable_mode()
